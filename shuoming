parser_w工具说明：
该工具是 高通family-B的死机解析工具界面形式
核心使用 Linux Ramdump Parser 工具进行
本工具内部集成了需要的Python工具，gdb工具，nm工具等

工具使用参数选择和命令行版本一致；默认选择解析所有（everything）
有任何问题请联系：游锦
联系邮箱:youjin@zte.com.cn 或者 jinrich@126.com
版本 Version 1 2016/3/5

Linux Ramdump Parser Mach 2
Based on the previous linux ram dump parser written in C++
What does this tool do?
----------------------------------
As per the description from the previous version:
"This tool takes as its input a vmlinux symbol file, and files representing
memory from devices that run Linux. It proceeds to dump useful information
such as process stacks, IRQ and workqueue information."

What does this tool need?
----------------------------------
1) Python. This tool has been tested with Python 2.6.5 on both Linux and Windows
1) a set of RAM dumps. Ideally, the load location of each dump as well.
2) The corresponding vmlinux file

How is this tool invoked?
----------------------------------
python ramparse.py invokes the parser. Options:

--ram-file <file path> <start> <end> : Add this ram file to be parsed.
At least one of --ram-file and --auto-dump required

--vmlinux <path> : path for vmlinux to use. This is required

--auto-dump <path to folder> : Automatically find files for a RAM dump and
detect useful informaton.

--nm-path <path> : Path for the GNU nm tool. If no path is given, a resonable
default will be used

--gdb-path <path> : path for the GNU gdb debugger. If no path is given, a
resonable default will be used.

--outdir <path> : Output directory to store any files written. If no path is
given, the current working directory is used

--out-file <path> : File to write all output to. If no path is given,
linux-parser-output.txt is used

--stdout : Write to stdout instead of the out-file. This overrides any
--out-file given.

--dmesg : print dmesg

--print-irqs: print irq state

--print-workqueues: print workqueue information

--check-for-watchdog: check for magic numbers to indicate a watchdog bark.
If there was a bite, print out information.

--check-for-panic: Make it very obvious that a kernel panic occured and print
out the stack of the panicking function

--t32launcher :  create shortcuts for loading in a T32 simulator. Currently
only generated for Windows, Linux support is forthcoming, much like Linux T32
support

--print-rtb : print the Register Trace Buffer (RTB) information. go/rtb for
details about this tool

--slabinfo: Prints out information about the slabs used for memory allocation
in the system. This feature is currently very experimental so there are no
guarantees on reliability

--everything : select all the options possible to give as much information
possible. It is not recommended to used --stdout with this unless you read
really really fast.

--print-cache-dump : if cache dumping support is enabled, print the human
readable form of the L2 cache dump to a file
